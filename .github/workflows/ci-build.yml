name: CI

on: [ push, pull_request ]

jobs:
  build:
    name: Build (Go ${{ matrix.go }}, OS ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go: [ 1.17.6 ]
        os: [ ubuntu-latest, macos-latest ]
    env:
      GO111MODULE: on
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Show versions
        run: go version

      - name: Install Go dependencies
        run: go mod download

      - name: Run golang tests
        run: |
          go test . -race -v -tags=debug -coverprofile=debug.txt -covermode=atomic
          go test . -race -v -coverprofile=release.txt -covermode=atomic

      - name: Run code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: debug.txt, release.txt # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)


  golangci-lint:
    name: Golang-CI (lint)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run linter
        uses: golangci/golangci-lint-action@v2 # Action page: <https://github.com/golangci/golangci-lint-action>
        with:
          version: v1.43 # without patch version
          only-new-issues: false # show only new issues if it's a pull request
